name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

  - name: Black Code Formatter
  # You may pin to the exact commit or the version.
  # uses: lgeiger/black-action@4379f39aa4b6a3bb1cceb46a7665b9c26647d82d
  uses: lgeiger/black-action@v1.0.1


  - name: python-isort
  # You may pin to the exact commit or the version.
  # uses: isort/isort-action@f14e57e1d457956c45a19c05a89cccdf087846e5
  uses: isort/isort-action@v1
  with:
    # Version of isort to use
    isort-version: # optional
    # Version of isort to use (DEPRECATED: use isort-version instead)

    isortVersion: # optional, default is latest
    # files or directories to sort
    sort-paths: # optional
    # files or directories to sort (DEPRECATED: use sort-paths instead)

    sortPaths: # optional, default is .
    # isort configuration options
    configuration: # optional, default is --check-only --diff
    # path(s) to requirements files that should be installed to properly configure third-party imports

    requirements-files: # optional
    # path(s) to requirements files that should be installed to properly configure third-party imports (DEPRECATED: use requirement-files instead)

    requirementsFiles: # optional, default is 
          
